// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CustomersColumns holds the columns for the "customers" table.
	CustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "full_name", Type: field.TypeString},
		{Name: "birth_date", Type: field.TypeTime},
		{Name: "registration_date", Type: field.TypeTime},
		{Name: "customer_picture_url", Type: field.TypeString, Nullable: true},
		{Name: "status", Type: field.TypeBool},
	}
	// CustomersTable holds the schema information for the "customers" table.
	CustomersTable = &schema.Table{
		Name:       "customers",
		Columns:    CustomersColumns,
		PrimaryKey: []*schema.Column{CustomersColumns[0]},
	}
	// MembershipsColumns holds the columns for the "memberships" table.
	MembershipsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "operation_date", Type: field.TypeTime},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "end_date", Type: field.TypeTime},
		{Name: "amount_paid", Type: field.TypeFloat64, Nullable: true},
		{Name: "amount_remaining", Type: field.TypeFloat64},
		{Name: "customer_membership", Type: field.TypeUUID},
	}
	// MembershipsTable holds the schema information for the "memberships" table.
	MembershipsTable = &schema.Table{
		Name:       "memberships",
		Columns:    MembershipsColumns,
		PrimaryKey: []*schema.Column{MembershipsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "memberships_customers_membership",
				Columns:    []*schema.Column{MembershipsColumns[6]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// MembershipTypesColumns holds the columns for the "membership_types" table.
	MembershipTypesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "description", Type: field.TypeString},
		{Name: "membership_month", Type: field.TypeUint8},
		{Name: "price", Type: field.TypeFloat64},
	}
	// MembershipTypesTable holds the schema information for the "membership_types" table.
	MembershipTypesTable = &schema.Table{
		Name:       "membership_types",
		Columns:    MembershipTypesColumns,
		PrimaryKey: []*schema.Column{MembershipTypesColumns[0]},
	}
	// PaymentsColumns holds the columns for the "payments" table.
	PaymentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"in", "out"}},
		{Name: "description", Type: field.TypeString},
		{Name: "amount", Type: field.TypeFloat64},
		{Name: "date_time", Type: field.TypeTime},
	}
	// PaymentsTable holds the schema information for the "payments" table.
	PaymentsTable = &schema.Table{
		Name:       "payments",
		Columns:    PaymentsColumns,
		PrimaryKey: []*schema.Column{PaymentsColumns[0]},
	}
	// PersonnelsColumns holds the columns for the "personnels" table.
	PersonnelsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "name", Type: field.TypeString},
		{Name: "salary", Type: field.TypeFloat64},
		{Name: "description", Type: field.TypeString},
		{Name: "bith_date", Type: field.TypeTime},
		{Name: "start_date", Type: field.TypeTime},
		{Name: "status", Type: field.TypeBool, Default: true},
	}
	// PersonnelsTable holds the schema information for the "personnels" table.
	PersonnelsTable = &schema.Table{
		Name:       "personnels",
		Columns:    PersonnelsColumns,
		PrimaryKey: []*schema.Column{PersonnelsColumns[0]},
	}
	// PersonnelRelCustomersColumns holds the columns for the "personnel_rel_customers" table.
	PersonnelRelCustomersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "description", Type: field.TypeString},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "customer_personnel_rel_customer", Type: field.TypeUUID},
		{Name: "personnel_personnel_rel_customer", Type: field.TypeUUID},
	}
	// PersonnelRelCustomersTable holds the schema information for the "personnel_rel_customers" table.
	PersonnelRelCustomersTable = &schema.Table{
		Name:       "personnel_rel_customers",
		Columns:    PersonnelRelCustomersColumns,
		PrimaryKey: []*schema.Column{PersonnelRelCustomersColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "personnel_rel_customers_customers_personnel_rel_customer",
				Columns:    []*schema.Column{PersonnelRelCustomersColumns[3]},
				RefColumns: []*schema.Column{CustomersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "personnel_rel_customers_personnels_personnel_rel_customer",
				Columns:    []*schema.Column{PersonnelRelCustomersColumns[4]},
				RefColumns: []*schema.Column{PersonnelsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeUUID},
		{Name: "username", Type: field.TypeString, Unique: true},
		{Name: "password", Type: field.TypeString},
		{Name: "role", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "status", Type: field.TypeBool, Default: true},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CustomersTable,
		MembershipsTable,
		MembershipTypesTable,
		PaymentsTable,
		PersonnelsTable,
		PersonnelRelCustomersTable,
		UsersTable,
	}
)

func init() {
	MembershipsTable.ForeignKeys[0].RefTable = CustomersTable
	PersonnelRelCustomersTable.ForeignKeys[0].RefTable = CustomersTable
	PersonnelRelCustomersTable.ForeignKeys[1].RefTable = PersonnelsTable
}
